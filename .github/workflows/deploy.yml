name: Deploy Flask Backend to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Clean previous deployment on EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          rm -rf /home/ec2-user/cloud_backend
          mkdir -p /home/ec2-user/cloud_backend

    - name: Upload code to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "."
        target: "/home/ec2-user/cloud_backend"

    - name: SSH and Deploy Flask App
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ec2-user/cloud_backend

          # Create Python 3.11 virtual environment if not exists
          if [ ! -d "venv" ]; then
            python3.11 -m venv venv
          fi

          # Activate virtual environment and install requirements
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

          # Kill previous Flask process (if running)
          pkill -f "python app.py" || echo "No running app to kill."

          # Start Flask app
          nohup python app.py --host=0.0.0.0 --port=5000 > flask.log 2>&1 &
          echo "ğŸš€ Flask app restarted successfully."
